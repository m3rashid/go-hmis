// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1

package db

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"
)

type BloodGroup string

const (
	BloodGroupAPOS  BloodGroup = "A-POS"
	BloodGroupANEG  BloodGroup = "A-NEG"
	BloodGroupBPOS  BloodGroup = "B-POS"
	BloodGroupBNEG  BloodGroup = "B-NEG"
	BloodGroupABPOS BloodGroup = "AB-POS"
	BloodGroupABNEG BloodGroup = "AB-NEG"
	BloodGroupOPOS  BloodGroup = "O-POS"
	BloodGroupONEG  BloodGroup = "O-NEG"
)

func (e *BloodGroup) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = BloodGroup(s)
	case string:
		*e = BloodGroup(s)
	default:
		return fmt.Errorf("unsupported scan type for BloodGroup: %T", src)
	}
	return nil
}

type NullBloodGroup struct {
	BloodGroup BloodGroup
	Valid      bool // Valid is true if BloodGroup is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullBloodGroup) Scan(value interface{}) error {
	if value == nil {
		ns.BloodGroup, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.BloodGroup.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullBloodGroup) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.BloodGroup), nil
}

type Sex string

const (
	SexM Sex = "M"
	SexF Sex = "F"
	SexO Sex = "O"
)

func (e *Sex) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Sex(s)
	case string:
		*e = Sex(s)
	default:
		return fmt.Errorf("unsupported scan type for Sex: %T", src)
	}
	return nil
}

type NullSex struct {
	Sex   Sex
	Valid bool // Valid is true if Sex is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullSex) Scan(value interface{}) error {
	if value == nil {
		ns.Sex, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Sex.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullSex) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Sex), nil
}

type Auth struct {
	ID            int64
	Name          string
	Email         string
	Password      string
	EmailVerified bool
	Profile       sql.NullInt64
	Roles         []int64
	Deleted       bool
	CreatedAt     time.Time
	UpdatedAt     time.Time
	CreatedBy     sql.NullInt64
	UpdatedBy     sql.NullInt64
}

type Profile struct {
	ID             int64
	Age            sql.NullInt32
	Sex            interface{}
	BloodGroup     interface{}
	Weight         sql.NullInt32
	Height         sql.NullString
	AuthId         sql.NullInt64
	ProfilePicture sql.NullString
	Designation    sql.NullString
	Department     sql.NullString
	Deleted        bool
	CreatedAt      time.Time
	UpdatedAt      time.Time
	CreatedBy      sql.NullInt64
	UpdatedBy      sql.NullInt64
}

type Role struct {
	ID          int64
	Name        string
	Description sql.NullString
	Workspace   sql.NullInt64
	Permissions json.RawMessage
	Deleted     bool
	CreatedAt   time.Time
	UpdatedAt   time.Time
	CreatedBy   sql.NullInt64
	UpdatedBy   sql.NullInt64
}

type Workspace struct {
	ID          int64
	Name        string
	Description sql.NullString
	ColorCode   string
	Deleted     bool
	CreatedAt   time.Time
	UpdatedAt   time.Time
	CreatedBy   sql.NullInt64
	UpdatedBy   sql.NullInt64
}
